@using Plain.Web
@{
    ViewBag.Title = "编辑";

    Layout = Url.Content("~/Views/Shared/_LayoutEdit.cshtml");
}
@model Plain.Model.Models.Model.Basic_Menu
@section MainContent{
    <div class="portlet-body form-horizontal form-bordered form-row-stripped">
        <div class="row-fluid">
            <div class="control-group">
                <label class="control-label"><span class="required">*</span>菜单名称</label>
                <div class="controls">
                    @Html.TextBoxFor(x => x.MenuName, new { @class = "m-wrap small" })
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.MenuName)</span>
                </div>
            </div>

            <div class="control-group">
                <label class="control-label"><span class="required">*</span>菜单链接</label>
                <div class="controls">
                    @Html.TextBoxFor(x => x.MenuUrl, new { @class = "m-wrap small" })
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.MenuUrl)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label"><span class="required">*</span>菜单类型</label>
                <div class="controls">
                    @Html.DropDownListFor(x => x.MenuType, ViewData["MenuTypes"] as IEnumerable<SelectListItem>, new { @class = "m-wrap  small" })
                </div>
            </div>
            <div class="control-group">
                <label class="control-label"><span class="required">*</span>菜单图标</label>
                <div class="controls">
                    @Html.TextBoxFor(x => x.MenuIcon, new { @class = "m-wrap small" })
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.MenuIcon)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label"><span class="required">*</span>排序</label>
                <div class="controls">
                    @Html.TextBoxFor(x => x.MenuSort, new { @class = "m-wrap  small" })
                    <span class="help-inline">@Html.ValidationMessageFor(m => m.MenuSort)</span>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label"><span class="required">*</span>父级菜单</label>
                <div class="controls">
                    @Html.DropDownListFor(x => x.MenuParentId, AdminCacheContext.Current.MenuItems.Menus.Select(x => new SelectListItem
               {
                   Value = x.Id.ToString(),
                   Text = x.MenuName
               }).Concat<SelectListItem>(new List<SelectListItem>() {
                new SelectListItem()
               {
                   Value = "0",
                   Text = "无"
               } }).AsEnumerable(), new { @class = "m-wrap small " })
                </div>
            </div>

            <div class="control-group">
                <label class="control-label"><span class="required">*</span>是否可用</label>
                <div class="controls">
                    @Html.DropDownListFor(x => x.MenuStatus, ViewData["StatusTypes"] as IEnumerable<SelectListItem>, new { @class = "m-wrap  small" })
                </div>
            </div>
        </div>
    </div>
}
